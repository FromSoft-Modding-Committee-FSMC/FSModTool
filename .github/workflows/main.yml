name: Build all projects

on:
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '**.png'
      - "**.txt"
  pull_request:
    branches: [ master ]

jobs:
  linux-build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Install Qt
      uses: jurplel/install-qt-action@v2

    - name: Install libxcb stuff
      run: |
        sudo apt install -y libxcb*

    - name: Get linuxdeployqt
      run: | 
        wget "https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage" -P ~/
        chmod +x ~/linuxdeployqt-continuous-x86_64.AppImage
      
    - name: Build checksum_tool
      run: |
        cd Tools/checksum_tool
        qmake
        make -j2
        cd ..

    - name: Build KFModTool
      continue-on-error: true
      run: |
      
        cd Tools/KFModTool
        qmake
        make -j2
        cd ..

    - name: Build KFRandomizer
      run: |
        cd Tools/KFRandomizer
        qmake
        make -j2
        cd ..
        
    - name: Build tfile_tool
      run: |
        cd Tools/tfile_tool
        qmake
        make -j2
        cd ..

    - name: Deploy checksum_tool AppImage
      run: |
        cd Tools/checksum_tool
        ~/linuxdeployqt-continuous-x86_64.AppImage checksum_tool -appimage 

    - name: Upload checksum_tool build
      uses: actions/upload-artifact@v2
      with:
        name: checksum_tool Linux (64-bit) AppImage
        path: Tools/checksum_tool/checksum_tool*.AppImage

    - name: Deploy KFModTool AppImage
      run: |
        cd Tools/KFModTool
        ~/linuxdeployqt-continuous-x86_64.AppImage KFModTool -appimage 

    - name: Upload KFModTool build
      continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: KFModTool Linux (64-bit) AppImage
        path: Tools/KFModTool/KFModTool*.AppImage

    - name: Deploy KFRandomizer AppImage
      run: |
        cd Tools/KFRandomizer
        ~/linuxdeployqt-continuous-x86_64.AppImage KFRandomizer -appimage 

    - name: Upload KFRandomizer build
      uses: actions/upload-artifact@v2
      with:
        name: KFRandomizer Linux (64-bit) AppImage
        path: Tools/KFRandomizer/KFRandomizer*.AppImage

    - name: Deploy tfile_tool AppImage
      run: |
        cd Tools/tfile_tool
        ~/linuxdeployqt-continuous-x86_64.AppImage tfile_tool -appimage 
        
    - name: Upload tfile_tool build
      uses: actions/upload-artifact@v2
      with:
        name: tfile_tool Linux (64-bit) AppImage
        path: Tools/tfile_tool/tfile_tool*.AppImage

  windows-build:
    runs-on: 	windows-latest
    
    steps:
    - name: Checkout repo
      uses: actions/checkout@v2
      with:
        submodules: 'recursive'

    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        arch: win64_mingw81

    - name: Build checksum_tool
      run: |
        cd Tools\checksum_tool
        qmake
        make -j2
        cd ..

    - name: Build KFModTool
      continue-on-error: true
      run: |
        cd Tools\KFModTool
        qmake
        make -j2
        cd ..

    - name: Build KFRandomizer
      run: |
        cd Tools\KFRandomizer
        qmake
        make -j2
        cd ..
        
    - name: Build tfile_tool
      run: |
        cd Tools\tfile_tool
        qmake
        make -j2
        cd ..

    - name: Deploy checksum_tool
      run : |
        cd Tools\checksum_tool\release
        windeployqt --compiler-runtime checksum_tool.exe
        del *.o *.cpp *.h
        cp $env:Qt5_Dir\bin\libgcc_s_seh-1.dll .
        cp $env:Qt5_Dir\bin\libstdc++-6.dll .
        cp $env:Qt5_Dir\bin\libwinpthread-1.dll .
        cd ..
        ren release checksum_tool
        tar.exe -a -c -f "checksum_tool Windows (64-bit) build.zip" checksum_tool

    - name: Upload checksum_tool build
      uses: actions/upload-artifact@v2
      with:
        name: checksum_tool Windows (64-bit) build
        path: "Tools\checksum_tool\checksum_tool\checksum_tool Windows (64-bit) build.zip"

    - name: Deploy KFModTool
      continue-on-error: true
      run : |
        cd Tools\KFModTool\release
        windeployqt --compiler-runtime KFModTool.exe
        del *.o *.cpp *.h
        cp $env:Qt5_Dir\bin\libgcc_s_seh-1.dll .
        cp $env:Qt5_Dir\bin\libstdc++-6.dll .
        cp $env:Qt5_Dir\bin\libwinpthread-1.dll .
        cd ..
        ren release KFModTool
        tar.exe -a -c -f "KFModTool Windows (64-bit) build.zip" KFModTool
        
    - name: Upload KFModTool build
      continue-on-error: true
      uses: actions/upload-artifact@v2
      with:
        name: KFModTool Windows (64-bit) build
        path: Tools\KFModTool\KFModTool\

    - name: Deploy KFRandomizer
      run : |
        cd Tools\KFRandomizer\release
        windeployqt --compiler-runtime KFRandomizer.exe
        del *.o *.cpp *.h
        cp $env:Qt5_Dir\bin\libgcc_s_seh-1.dll .
        cp $env:Qt5_Dir\bin\libstdc++-6.dll .
        cp $env:Qt5_Dir\bin\libwinpthread-1.dll .
        cd ..
        ren release KFRandomizer
        tar.exe -a -c -f "KFRandomizer Windows (64-bit) build.zip" KFRandomizer
        
    - name: Upload KFRandomizer build
      uses: actions/upload-artifact@v2
      with:
        name: KFRandomizer Windows (64-bit) build
        path: "Tools\KFRandomizer\KFRandomizer\KFRandomizer Windows (64-bit) build.zip"

    - name: Deploy tfile_tool
      run : |
        cd Tools\tfile_tool\release
        windeployqt --compiler-runtime tfile_tool.exe
        del *.o *.cpp *.h
        cp $env:Qt5_Dir\bin\libgcc_s_seh-1.dll .
        cp $env:Qt5_Dir\bin\libstdc++-6.dll .
        cp $env:Qt5_Dir\bin\libwinpthread-1.dll .
        cd ..
        ren release tfile_tool
        tar.exe -a -c -f "tfile_tool Windows (64-bit) build.zip" tfile_tool
        cd ../..
        
    - name: Upload tfile_tool build
      uses: actions/upload-artifact@v2
      with:
        name: tfile_tool Windows (64-bit) build
        path: "Tools\tfile_tool\tfile_tool Windows (64-bit) build.zip"

  # This is practically copied from DuckStation's GitHub Actions workflow.
  create-release:
    needs: [linux-build, windows-build]
    runs-on: ubuntu-latest
    
    steps:
     - name: "Download all artifacts"
       uses:  actions/download-artifact@v2
    
     - name: "tree for debugging"
       run: |
          sudo apt install tree
          tree
